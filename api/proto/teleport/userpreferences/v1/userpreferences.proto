// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package teleport.userpreferences.v1;

import "google/protobuf/empty.proto";
import "teleport/assist/v1/assist_user_preferences.proto";
import "teleport/userpreferences/v1/theme.proto";

option go_package = "github.com/gravitational/teleport/api/gen/proto/go/userpreferences/v1;userpreferencesv1";

// UserPreferences is a collection of different user changeable preferences for the frontend.
message UserPreferences {
  // assist is the preferences for the Teleport Assist.
  assist.v1.AssistantUserPreferences assist = 1;
  // theme is the theme of the frontend.
  Theme theme = 2;
}

// GetUserPreferencesRequest is a request to get the user preferences.
message GetUserPreferencesRequest {
  // username is the username of the owner of the user preferences to get.
  string username = 1;
}

// UpdateUserPreferencesRequest is a request to update the user preferences.
message UpdateUserPreferencesRequest {
  // preferences is the new user preferences to set.
  UserPreferences preferences = 1;
  // username is the username of the owner of the user preferences to update.
  string username = 2;
}

// AssistService is a service that provides an ability to communicate with the Teleport Assist.
service UserPreferencesService {
  // GetUserPreferences returns the user preferences for a given user.
  rpc GetUserPreferences(GetUserPreferencesRequest) returns (UserPreferences);
  // UpdateUserPreferences updates the user preferences for the given user.
  rpc UpdateUserPreferences(UpdateUserPreferencesRequest) returns (google.protobuf.Empty);
}
